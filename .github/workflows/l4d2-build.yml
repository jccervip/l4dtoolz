name: l4d2-build

on:
  repository_dispatch:
  workflow_dispatch:
  
jobs:
  build:
    name: build with mms${{ matrix.mm_version }} on ${{ matrix.os_short }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os:
          - ubuntu-latest

        mm_version:
          - "master"

        include:
          - mm_version: "master"
            mm_branch: "master"

          - os: ubuntu-latest
            os_short: linux

    steps:
      - name: Prepare env
        shell: bash
        run: |
          echo "GITHUB_SHA_SHORT=${GITHUB_SHA::7}" >> $GITHUB_ENV

      - name: Install (Linux)
        if: startsWith(runner.os, 'Linux')
        run: |
          sudo dpkg --add-architecture i386
          sudo apt-get update
          sudo apt-get install -y clang g++-multilib
          
      - name: Checking out MM:Source
        uses: actions/checkout@v3
        with:
          repository: alliedmodders/metamod-source
          ref: ${{ matrix.mm_branch }}
          path: metamod-${{ matrix.mm_version }}
          submodules: recursive

      - name: Setting up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Setting up ambuild
        run: |
          python -m pip install wheel
          pip install git+https://github.com/accelerator74/ambuild

      - name: Checking out hl2sdk-l4d2
        uses: actions/checkout@v3
        with:
          repository: alliedmodders/hl2sdk
          ref: l4d2
          path: hl2sdk-l4d2
          submodules: recursive

      - name: Checking out own repository
        uses: actions/checkout@v3
        with:
          repository: accelerator74/l4dtoolz
          ref: master
          path: src
          submodules: recursive
          
      - name: Compiling ${{ github.event.repository.name }} files
        working-directory: src
        run: |
          mkdir build
          cd build
          python ../configure.py --enable-optimize --sdks="l4d2" --mms-path="${{ github.workspace }}/metamod-${{ matrix.mm_version }}"
          ambuild

      - name: Uploading package
        uses: actions/upload-artifact@v3
        with:
          name: L4DToolZ-l4d2-${{ env.GITHUB_SHA_SHORT }}
          path: src/build/package
